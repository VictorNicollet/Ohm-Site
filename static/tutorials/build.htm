<p>To build your application, execute <code>make</code> in the project root. If something breaks, you might wish to clean up everything with <code>make clean</code> before doing <code>make</code>. To download the latest version of the Ohm Framework and rebuild everything, run <code>ohm init .</code> in the project root.</p>

<p>The build process contains six steps, detailed below:</p>

<p><b>Run all plugin tools</b></p>

<p>Several Ohm plugins provide command-line tools that must be run before the rest of the build process can be executed. For instance, plugin ohmStatic converts HTML and markdown files into OCaml source files that can then be used by the Build OCaml step.</p>

<p><b>Compile asset files</b></p>

<p>The Ohm build tool traverses the <code>/assets</code> directory, compiles the script and style files <code>/www/style.css</code> and <code>/www/script.js</code>, and creates OCaml bindings for all the HTML templates it found. These bindings are then available during the Build OCaml step below.</p>

<p><b>Compile OCaml files</b></p>

<p>The command-line tool <code>ocamlbuild</code> is invoked to build the <code>/ocaml/main.byte</code> executable from the OCaml source code. This includes source code you wrote yourself and stored in <code>/ocaml</code>, the source code for any plugins you have enabled, and the source code which was generated by the two previous steps.</p>

<p><b>Install the server</b></p>

<p>The <code>/ocaml/main.byte</code> executable is copied as <code>/www/server.real</code>. This ensures that, if the build fails, the old server executable remains available.</p>

<p><b>Install the new configuration</b></p> 

<p>The executable is run with a <code>--put</code> argument, setting the value <code>O.role = `Put</code>. The application code can then detect this to compute and upload various configuration elements to databases or third party services (such as <abbr name="Content Distribution Network">CDN</abbr>s).</p>

<p><b>Reboot the servers</b></p>

<p>The executable is run with a <code>--reset</code> argument, which sends a reset signal through the database. Any running instance of the server will shut down the next time they read the reset signal. This happens before responding to an HTTP request for instances in <code>`Web</code> mode, and once every two seconds for instances in <code>`Bot</code> mode.</p>

<p>The supervision processes (<code>supervise</code> or Apache2 <code>mod_fcgi</code>) will automatically launch new instances when they detect the previous instances have shut down. They will do so using the new server executable, which has been installed by the previous steps.</p>
